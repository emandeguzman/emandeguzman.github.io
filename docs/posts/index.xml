<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Eman&#39;s Blog</title>
    <link>https://emandeguzman.github.io/posts/</link>
    <description>Recent content in Posts on Eman&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Tue, 18 May 2021 13:06:22 +0800</lastBuildDate>
    
	<atom:link href="https://emandeguzman.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Safari overflow</title>
      <link>https://emandeguzman.github.io/posts/safari_overflow/</link>
      <pubDate>Tue, 18 May 2021 13:06:22 +0800</pubDate>
      
      <guid>https://emandeguzman.github.io/posts/safari_overflow/</guid>
      <description>Motivation I encountered this situation where Safari&amp;rsquo;s display would overflow when the keyboard shows up. This ruins the whole page even when the elements have a width of 100% and body has and overflow-x hidden set.
Solution In head, add a meta tag for viewport like
 meta name=&amp;quot;viewport&amp;rdquo; content=&amp;quot;width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0&amp;quot;&amp;gt;
 width would set the viewport&amp;rsquo;s width to that of the device&amp;rsquo;s width. initial-scale makes sure the zoom level is initially set to 1 (100%).</description>
    </item>
    
    <item>
      <title>waitFor</title>
      <link>https://emandeguzman.github.io/posts/waitfor/</link>
      <pubDate>Sun, 16 May 2021 07:31:27 +0800</pubDate>
      
      <guid>https://emandeguzman.github.io/posts/waitfor/</guid>
      <description>Motivation With the use of defer/async to load javascipts, it has become apparent that we must make sure that the javascript function, object, variables are loaded before referring to the those items. waitFor checks for the presence of these items then runs the provided callback function (if any) once the checked item is loaded and ready for use. waitFor returns a Promise so it can also be used in a promise chain.</description>
    </item>
    
  </channel>
</rss>