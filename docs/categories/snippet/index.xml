<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Snippet on Eman&#39;s Blog</title>
    <link>https://emandeguzman.github.io/categories/snippet/</link>
    <description>Recent content in Snippet on Eman&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Sat, 22 May 2021 11:13:45 +0800</lastBuildDate>
    
	<atom:link href="https://emandeguzman.github.io/categories/snippet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git Submodules</title>
      <link>https://emandeguzman.github.io/posts/git-submodules/</link>
      <pubDate>Sat, 22 May 2021 11:13:45 +0800</pubDate>
      
      <guid>https://emandeguzman.github.io/posts/git-submodules/</guid>
      <description>Adding a submodule Inside your repository, execute the following command.
 git submodule add https://github.com/submodule/to_add.git /folder/to/put/submodule
  Cloning a repository with submodules   Method 1
 Clone the repository   git clone https://github.com/repository/to_clone.git
  Go to each submodules folder then initialize and update   cd submodule/folder
git submodule init
git submodule update
   Method 2
 git clone &amp;ndash;recurse-submodules https://github.com/repository/to_clone.git
 The &amp;ndash;recurse-submodules option will automaticallu initialize and update all submodules</description>
    </item>
    
    <item>
      <title>waitFor</title>
      <link>https://emandeguzman.github.io/posts/waitfor/</link>
      <pubDate>Sun, 16 May 2021 07:31:27 +0800</pubDate>
      
      <guid>https://emandeguzman.github.io/posts/waitfor/</guid>
      <description>Motivation With the use of defer/async to load javascipts, it has become apparent that we must make sure that the javascript function, object, variables are loaded before referring to the those items.
waitFor checks for the presence of these items then runs the provided callback function (if any) once the checked item is loaded and ready for use.
waitFor returns a Promise so it can also be used in a promise chain.</description>
    </item>
    
  </channel>
</rss>